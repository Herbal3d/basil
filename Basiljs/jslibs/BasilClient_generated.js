// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var org = org || {};

/**
 * @const
 * @namespace
 */
org.herbal3d = org.herbal3d || {};

/**
 * @const
 * @namespace
 */
org.herbal3d.protocol = org.herbal3d.protocol || {};

/**
 * @const
 * @namespace
 */
org.herbal3d.protocol.basil = org.herbal3d.protocol.basil || {};

/**
 * @const
 * @namespace
 */
org.herbal3d.protocol.basil.client = org.herbal3d.protocol.basil.client || {};

/**
 * @enum
 */
org.herbal3d.protocol.basil.client.BasilClientMsgMsg = {
  NONE: 0,
  ObjectPropertiesResponse: 1,
  InstancePropertiesResponse: 2,
  OpenSessionResponse: 3,
  CloseSession: 4,
  AliveCheck: 5,
  AliveResponse: 6
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.client.ObjectPropertiesResponse}
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.client.ObjectPropertiesResponse=} obj
 * @returns {org.herbal3d.protocol.basil.client.ObjectPropertiesResponse}
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.getRootAsObjectPropertiesResponse = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.client.ObjectPropertiesResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.prototype.objectId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {org.herbal3d.protocol.basil.propertyValue=} obj
 * @returns {org.herbal3d.protocol.basil.propertyValue}
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.prototype.props = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new org.herbal3d.protocol.basil.propertyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.prototype.propsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.startObjectPropertiesResponse = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} objectIdOffset
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.addObjectId = function(builder, objectIdOffset) {
  builder.addFieldOffset(0, objectIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propsOffset
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.addProps = function(builder, propsOffset) {
  builder.addFieldOffset(1, propsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.createPropsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.startPropsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.ObjectPropertiesResponse.endObjectPropertiesResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.client.InstancePropertiesResponse}
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.client.InstancePropertiesResponse=} obj
 * @returns {org.herbal3d.protocol.basil.client.InstancePropertiesResponse}
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.getRootAsInstancePropertiesResponse = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.client.InstancePropertiesResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.prototype.instanceId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {org.herbal3d.protocol.basil.propertyValue=} obj
 * @returns {org.herbal3d.protocol.basil.propertyValue}
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.prototype.props = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new org.herbal3d.protocol.basil.propertyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.prototype.propsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.startInstancePropertiesResponse = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} instanceId
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.addInstanceId = function(builder, instanceId) {
  builder.addFieldInt32(0, instanceId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propsOffset
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.addProps = function(builder, propsOffset) {
  builder.addFieldOffset(1, propsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.createPropsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.startPropsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.InstancePropertiesResponse.endInstancePropertiesResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.client.OpenSessionResponse}
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.client.OpenSessionResponse=} obj
 * @returns {org.herbal3d.protocol.basil.client.OpenSessionResponse}
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.getRootAsOpenSessionResponse = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.client.OpenSessionResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {org.herbal3d.protocol.basil.propertyValue=} obj
 * @returns {org.herbal3d.protocol.basil.propertyValue}
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.prototype.features = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new org.herbal3d.protocol.basil.propertyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.prototype.featuresLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.startOpenSessionResponse = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} featuresOffset
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.addFeatures = function(builder, featuresOffset) {
  builder.addFieldOffset(0, featuresOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.createFeaturesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.startFeaturesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.OpenSessionResponse.endOpenSessionResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.client.CloseSession = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.client.CloseSession}
 */
org.herbal3d.protocol.basil.client.CloseSession.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.client.CloseSession=} obj
 * @returns {org.herbal3d.protocol.basil.client.CloseSession}
 */
org.herbal3d.protocol.basil.client.CloseSession.getRootAsCloseSession = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.client.CloseSession).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
org.herbal3d.protocol.basil.client.CloseSession.prototype.reason = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.client.CloseSession.startCloseSession = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} reasonOffset
 */
org.herbal3d.protocol.basil.client.CloseSession.addReason = function(builder, reasonOffset) {
  builder.addFieldOffset(0, reasonOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.CloseSession.endCloseSession = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.client.AliveCheck = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.client.AliveCheck}
 */
org.herbal3d.protocol.basil.client.AliveCheck.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.client.AliveCheck=} obj
 * @returns {org.herbal3d.protocol.basil.client.AliveCheck}
 */
org.herbal3d.protocol.basil.client.AliveCheck.getRootAsAliveCheck = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.client.AliveCheck).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.client.AliveCheck.prototype.time = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.client.AliveCheck.prototype.sequenceNumber = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.client.AliveCheck.startAliveCheck = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} time
 */
org.herbal3d.protocol.basil.client.AliveCheck.addTime = function(builder, time) {
  builder.addFieldInt64(0, time, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sequenceNumber
 */
org.herbal3d.protocol.basil.client.AliveCheck.addSequenceNumber = function(builder, sequenceNumber) {
  builder.addFieldInt32(1, sequenceNumber, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.AliveCheck.endAliveCheck = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.client.AliveResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.client.AliveResponse}
 */
org.herbal3d.protocol.basil.client.AliveResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.client.AliveResponse=} obj
 * @returns {org.herbal3d.protocol.basil.client.AliveResponse}
 */
org.herbal3d.protocol.basil.client.AliveResponse.getRootAsAliveResponse = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.client.AliveResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.client.AliveResponse.prototype.time = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.client.AliveResponse.prototype.sequenceNumber = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.client.AliveResponse.prototype.timeReceived = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.client.AliveResponse.prototype.sequenceNumberReceived = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.client.AliveResponse.startAliveResponse = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} time
 */
org.herbal3d.protocol.basil.client.AliveResponse.addTime = function(builder, time) {
  builder.addFieldInt64(0, time, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sequenceNumber
 */
org.herbal3d.protocol.basil.client.AliveResponse.addSequenceNumber = function(builder, sequenceNumber) {
  builder.addFieldInt32(1, sequenceNumber, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} timeReceived
 */
org.herbal3d.protocol.basil.client.AliveResponse.addTimeReceived = function(builder, timeReceived) {
  builder.addFieldInt64(2, timeReceived, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sequenceNumberReceived
 */
org.herbal3d.protocol.basil.client.AliveResponse.addSequenceNumberReceived = function(builder, sequenceNumberReceived) {
  builder.addFieldInt32(3, sequenceNumberReceived, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.AliveResponse.endAliveResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.client.BasilClientMsg = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.client.BasilClientMsg}
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.client.BasilClientMsg=} obj
 * @returns {org.herbal3d.protocol.basil.client.BasilClientMsg}
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.getRootAsBasilClientMsg = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.client.BasilClientMsg).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {org.herbal3d.protocol.basil.BTransportHdrStruct=} obj
 * @returns {org.herbal3d.protocol.basil.BTransportHdrStruct}
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.prototype.BTransportHdr = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new org.herbal3d.protocol.basil.BTransportHdrStruct).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {org.herbal3d.protocol.basil.client.BasilClientMsgMsg}
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.prototype.MsgType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {org.herbal3d.protocol.basil.client.BasilClientMsgMsg} */ (this.bb.readUint8(this.bb_pos + offset)) : org.herbal3d.protocol.basil.client.BasilClientMsgMsg.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.prototype.Msg = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.startBasilClientMsg = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} BTransportHdrOffset
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.addBTransportHdr = function(builder, BTransportHdrOffset) {
  builder.addFieldOffset(0, BTransportHdrOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {org.herbal3d.protocol.basil.client.BasilClientMsgMsg} MsgType
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.addMsgType = function(builder, MsgType) {
  builder.addFieldInt8(1, MsgType, org.herbal3d.protocol.basil.client.BasilClientMsgMsg.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MsgOffset
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.addMsg = function(builder, MsgOffset) {
  builder.addFieldOffset(2, MsgOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.client.BasilClientMsg.endBasilClientMsg = function(builder) {
  var offset = builder.endObject();
  return offset;
};

// Exports for Node.js and RequireJS
this.org = org;
