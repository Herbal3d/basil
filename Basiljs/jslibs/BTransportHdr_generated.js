// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var org = org || {};

/**
 * @const
 * @namespace
 */
org.herbal3d = org.herbal3d || {};

/**
 * @const
 * @namespace
 */
org.herbal3d.protocol = org.herbal3d.protocol || {};

/**
 * @const
 * @namespace
 */
org.herbal3d.protocol.basil = org.herbal3d.protocol.basil || {};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.BTransportSeqStruct = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.BTransportSeqStruct}
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.BTransportSeqStruct=} obj
 * @returns {org.herbal3d.protocol.basil.BTransportSeqStruct}
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.getRootAsBTransportSeqStruct = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.BTransportSeqStruct).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.prototype.sequenceNum = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.prototype.stream = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.prototype.queueTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.prototype.sendTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.startBTransportSeqStruct = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sequenceNum
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.addSequenceNum = function(builder, sequenceNum) {
  builder.addFieldInt32(0, sequenceNum, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} stream
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.addStream = function(builder, stream) {
  builder.addFieldInt32(1, stream, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} queueTime
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.addQueueTime = function(builder, queueTime) {
  builder.addFieldInt64(2, queueTime, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} sendTime
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.addSendTime = function(builder, sendTime) {
  builder.addFieldInt64(3, sendTime, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.BTransportSeqStruct.endBTransportSeqStruct = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.BTransportRequestStruct = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.BTransportRequestStruct}
 */
org.herbal3d.protocol.basil.BTransportRequestStruct.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.BTransportRequestStruct=} obj
 * @returns {org.herbal3d.protocol.basil.BTransportRequestStruct}
 */
org.herbal3d.protocol.basil.BTransportRequestStruct.getRootAsBTransportRequestStruct = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.BTransportRequestStruct).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
org.herbal3d.protocol.basil.BTransportRequestStruct.prototype.session = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.BTransportRequestStruct.prototype.sessionKey = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.BTransportRequestStruct.startBTransportRequestStruct = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} session
 */
org.herbal3d.protocol.basil.BTransportRequestStruct.addSession = function(builder, session) {
  builder.addFieldInt32(0, session, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} sessionKey
 */
org.herbal3d.protocol.basil.BTransportRequestStruct.addSessionKey = function(builder, sessionKey) {
  builder.addFieldInt64(1, sessionKey, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.BTransportRequestStruct.endBTransportRequestStruct = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.BTransportTraceStruct = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.BTransportTraceStruct}
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.BTransportTraceStruct=} obj
 * @returns {org.herbal3d.protocol.basil.BTransportTraceStruct}
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.getRootAsBTransportTraceStruct = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.BTransportTraceStruct).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.prototype.traceID = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.prototype.parentSpanID = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.prototype.spanID = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {boolean}
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.prototype.sampled = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.startBTransportTraceStruct = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} traceID
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.addTraceID = function(builder, traceID) {
  builder.addFieldInt64(0, traceID, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} parentSpanID
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.addParentSpanID = function(builder, parentSpanID) {
  builder.addFieldInt64(1, parentSpanID, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} spanID
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.addSpanID = function(builder, spanID) {
  builder.addFieldInt64(2, spanID, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} sampled
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.addSampled = function(builder, sampled) {
  builder.addFieldInt8(3, +sampled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.BTransportTraceStruct.endBTransportTraceStruct = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
org.herbal3d.protocol.basil.BTransportHdrStruct = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {org.herbal3d.protocol.basil.BTransportHdrStruct}
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {org.herbal3d.protocol.basil.BTransportHdrStruct=} obj
 * @returns {org.herbal3d.protocol.basil.BTransportHdrStruct}
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.getRootAsBTransportHdrStruct = function(bb, obj) {
  return (obj || new org.herbal3d.protocol.basil.BTransportHdrStruct).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {org.herbal3d.protocol.basil.BTransportSeqStruct=} obj
 * @returns {org.herbal3d.protocol.basil.BTransportSeqStruct}
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.prototype.seq = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new org.herbal3d.protocol.basil.BTransportSeqStruct).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {org.herbal3d.protocol.basil.BTransportRequestStruct=} obj
 * @returns {org.herbal3d.protocol.basil.BTransportRequestStruct}
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.prototype.responseRequested = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new org.herbal3d.protocol.basil.BTransportRequestStruct).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {org.herbal3d.protocol.basil.accessAuthorization=} obj
 * @returns {org.herbal3d.protocol.basil.accessAuthorization}
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.prototype.auth = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new org.herbal3d.protocol.basil.accessAuthorization).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {org.herbal3d.protocol.basil.BTransportTraceStruct=} obj
 * @returns {org.herbal3d.protocol.basil.BTransportTraceStruct}
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.prototype.trace = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new org.herbal3d.protocol.basil.BTransportTraceStruct).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.startBTransportHdrStruct = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} seqOffset
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.addSeq = function(builder, seqOffset) {
  builder.addFieldOffset(0, seqOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} responseRequestedOffset
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.addResponseRequested = function(builder, responseRequestedOffset) {
  builder.addFieldOffset(1, responseRequestedOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} authOffset
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.addAuth = function(builder, authOffset) {
  builder.addFieldOffset(2, authOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} traceOffset
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.addTrace = function(builder, traceOffset) {
  builder.addFieldOffset(3, traceOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
org.herbal3d.protocol.basil.BTransportHdrStruct.endBTransportHdrStruct = function(builder) {
  var offset = builder.endObject();
  return offset;
};

// Exports for Node.js and RequireJS
this.org = org;
